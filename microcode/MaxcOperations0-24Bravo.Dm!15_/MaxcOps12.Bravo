Page Numbers: Yes   X: 527   Y: 10.5" First Page: 44Columns: 1   Edge Margin: .4"   Between Columns: .4"Margins:   Top: 1.3"   Bottom: 1"Line Numbers: No   Modulus: 5   Page-relativeOdd Heading:l4269qk40(635)Maxc Operations	Operating Tenex Microcode from Midasy756qk40(0,11571)\f5b16f0i36f1BI	Even Heading:y756qk40(0,4233)\14f1	Operaating Tenex Microcode from Midas	Maxc Operationsy756qk40(0,3881)(1,15346)\f5b1f0i37f5I16f1B12.  OPERATING TENEX MICROCODE FROM MIDASy702x3e12c(635)\b41BA.	Reset is accomplished by typingx3e12\b2B	21;Gx3e12(0,4763)(1,65535)to Midas.  The effect of this is to put the machine in monitor mode, to clear the interrupt system, the APR, the processor flags and the disk system.  However, Nova peripherals aren't affected, nor are the accumulators or PC affected.  If NVIO or AltIO is called after RESET the processor will start at its starting address (pointed to by absolute location 7).	x3e12j(635)B.	Starting at an arbitrary PDP-10 location n is accomplished by changing the contents of PC (which is on the display) to n and then typing	x3e12j\b2B42u1U77u1U	REMAPPC:	(Midas types out the value m of REMAPPC)	6,NVIO;T	(Maxc1 only)	"AltIO", "Do-It"	(Maxc2 only)x3e12(0,5080)(1,8255)\37u1U24i10I21i10IC.	The PDP-10 accumulators are LM 0, LM 1, ..., LM 17 and can be examined and changed in the usual way from Midas.	x3e12j(635)\b2BD.	The PDP-10 flags are in the left-most 13 bits of the F-register on the display.  If you change these from Midas, don't change the other 23 bits of F.	x3e12j\b2BThese and other interesting bits of F are as follows:x3e12	Bit	Definitionx3e12(0,3969)(1,6033)\b15B	0	Overflow	1	Carry 0	2	Carry 1	3	Floating overflow	4	Byte increment suppress	5	User mode	6	PARC mode (replaces PDP-10 user I/O mode)	7	Call from monitor (see JSYS, UMOVE, and Pager addendums to PDP-10 System		Reference Manual)	8-10	Machine mode (0=PDP-10, 1=Byte Lisp)	11	Floating underflow	12	No divide	13	Pushdown overflow	14	XCT0	15	XCT1	16	XCT2	17	XCT3	18	Incompatible	19	PI system is active	20	PI cycle in progress	21	MONALT - Temporary flag used by map loading microcode	22	THIRDPT - Temporary flag used by map loading microcode	23	Unused	24	TTYBSY - console teletype output busy	25	LOGF - enables main loop "LOGI", "BRKI", or "TRACEI" path	26	PICYCLE	27	CUM	28	MICRO	29	IENABLE	30	Unused	31	NOVA - Nova/Alto has left an interrupt request	32	K	33	J	34	H	35	Gx3e12\b1B11b1B10b1B10b1B20b1B26b1B12b1B44b1B95b1B42b1B22b1B13b1B21b1B8b1B8b1B8b1B8b1B16b1B23b1B24b1B57b1B58b1B10b1B41b1B61b1B11b1B7b1B9b1B11b1B10b1B50b1B5b1B5b1B5b1BE.	The interrupt system state is given by the following:x3e12(635)\b2BPISTAT[29,35] have 1's when interrupts are in progress on the corresponding PI levels[1,7].  PISTAT[22,28] have 1's when interrupts are disabled on the corresponding PI levels.	x3e12jSM 600 to SM 643 contain in bits 12-35 the interrupt locations corresponding to devices 0 through 35.  The device assignments are in Maxc document 11.	x3e12jSM 644 to SM 652 are the interrupt-enabled bit tables for priority interrupt levels 1 through 7.  1's in each word indicate that the corresponding device (bit 0=device 35, bit 35=device 0) is enabled for interrupts at that level.	x3e12jMICINTS contains 1's for each device which has requested an interrupt.  (However, OVF, FOVF, and PDOVF are recomputed from F for each instruction, so their state in MICINTS isn't important.)x3e12jF.	The microcode consistency "Checker" uses four variables CSUMD, CSUM0, CSUM1, and CSUM2 which contain checksums for all constants in the microprocessor's IM, DM, DM1, DM2, and SM memories.  CSUMD is an overall checksum (for detection of errors) while CSUM0-CSUM2 contain 18 6-bit bytes each of which is a checksum in a Hamming code.  The checker computes the address which is clobbered assuming only a single word is wrong.	x3e12j\b2BWhen newly assembled microcode is loaded for the first time on Maxc1, these checksums are computed by running CHECKER ("25;G" in the TENLOAD command file) and entering the values left in LM 11-LM 14 into the PATCHES file for CSUMD-CSUM2.  On Maxc2, the checksums are computed and dumped automatically by "Midas Init".  Subsequent runnings of the TENLOAD, MEXECGO, and TENGO command files check the newly loaded system against these constants, and crash on errors.  Also the CHECK JMC does this (executed during Tenex initialization).x3e12j